#!/usr/bin/env ruby

formulae = %w[
  bash
  bash-completion
  chromedriver
  colordiff
  diff-so-fancy
  exa
  git
  git-extras
  heroku
  httpie
  hub
  liquidprompt
  nvm
  pgcli
  postgresql
  rbenv
  rbenv-default-gems
  redis
  ruby-build
  tree
  wget
  yarn
].freeze

casks = %w[
  alfred
  bartender
  cloak
  dash
  dropbox
  firefox
  fluid
  google-chrome
  insomnia
  licecap
  qlmarkdown
  rocket
  spotify
].freeze

services = %w[
  postgresql
  redis
].freeze

ENV["HOMEBREW_NO_AUTO_UPDATE"] = "1"

def brew(command)
  system("brew #{command}") || exit(1)
end

def installed?(formula)
  @installed ||= `brew list`.split
  @installed.include?(formula)
end

def cask_installed?(cask)
  @installed_casks ||= `brew cask list`.split
  @installed_casks.include?(cask)
end

def running?(formula)
  @services ||= `brew services list`
  @services =~ /^#{Regexp.quote(formula)}\s+started/
end

def tapped?(tap)
  @taps ||= `brew tap`.split
  @taps.include?(tap)
end

brew "update"
brew "cask list" unless Dir.exist?("/usr/local/Caskroom")
brew "tap buo/cask-upgrade" unless tapped?("buo/cask-upgrade")
brew "cleanup --prune=30"
brew "cask cleanup --outdated"
brew "upgrade"
brew "cu --force --yes --no-brew-update"

brew "install grep --with-default-names" unless installed?("grep")

needed_formulae = formulae.reject(&method(:installed?))
brew ["install", *needed_formulae].join(" ") if needed_formulae.any?

needed_casks = casks.reject(&method(:cask_installed?))
brew ["cask install", *needed_casks].join(" ") if needed_casks.any?

stopped_services = services.reject(&method(:running?))
stopped_services.each { |service| brew "services restart #{service}" }
