#!/bin/bash

# This script will delete all local git branches that have been merged into the current branch,
# and all local branches that have remote tracking branches that have disappeared. It is expected
# that you will run this in your main/trunk branch.
#
# Then it will prompt before deleting all *remote* branches that have been merged.
#
# Code taken from http://devblog.springest.com/a-script-to-remove-old-git-branches,
# with modifications.

# Update our list of remotes
git fetch
git remote prune origin

echo "Remove fully merged local branches..."

# Remove local fully merged branches (ignoring those named "release-#")
git branch --merged HEAD | grep -E -v 'main$|trunk$|master$|acceptance$|development$|release-.+$' | xargs git branch -d
git branch --merged HEAD | grep -E 'release-.+$' | xargs echo "! Ignoring release branch:"

# Remove local branches for which the remote tracking branch has disappeared
git branch -vv | grep ": gone]" | awk '{print $1}' | xargs git branch -D

# Show remote fully merged branches
echo "The following remote branches are fully merged and will be removed:"
git branch -r --merged HEAD | sed 's/ *origin\///' | grep -E -v 'main$|trunk$|master$|acceptance$development$|release-.+|maintenance-.+$'

read -p "Continue (y/N)? "
if [ "$REPLY" == "y" ]
then
   # Remove remote fully merged branches
   git branch -r --merged HEAD | sed 's/ *origin\///' \
             | grep -E -v 'main$|trunk$|master$|acceptance$|development$|release-.+|maintenance-.+$' | xargs -I% git push origin :%
   echo "Done!"
fi
